summary(dataSetarrest2015$Age)
summary(dataSetarrest2015$Sex)
summary(as.factor(dataSetarrest2015$Sex))
plot(dataSetarrest2015$Age, table(dataSetarrest2015$Sex), main = "dependencia", xlab = "edad", ylab = "sexe")
plot(dataSetarrest2015$Age, dataSetarrest2015$Race, main = "dependencia", xlab = "edad", ylab = "raza")
class(dataSetarrest2015$Age)
class(dataSetarrest2015$Race)
dataSetarrest2015v2 <- dataSetarrest2015
dataSetarrest2015v2$Age <- as.factor(dataSetarrest2015v2$Age)
dataSetarrest2015v2$Sex <- as.factor(dataSetarrest2015v2$Sex)
dataSetarrest2015v2$Race <- as.factor(dataSetarrest2015v2$Race)
class(dataSetarrest2015v2$Age)
class(dataSetarrest2015v2$Sex)
class(dataSetarrest2015v2$Race)
plot(dataSetarrest2015v2$Age, table(dataSetarrest2015v2$Sex), main = "dependencia", xlab = "edad", ylab = "sexe")
plot(dataSetarrest2015v2$Age, dataSetarrest2015v2$Race, main = "dependencia", xlab = "edad", ylab = "raza")
# SEGONA PART ######################################
#a)
hist(table(dataSetarrest2015$Age))
plot(table(dataSetarrest2015$Age))
#b)
plot(table(dataSetarrest2015$Sex)) #Masculí
#b)
hist(table(dataSetarrest2015$Sex)) #Masculí
#b)
hist(dataSetarrest2015$Sex) #Masculí
#c)
labelsPie <- c("Femení", "Masculí")
#b)
hist(dataSetarrest2015$Sex) #Masculí
hist(dataSetarrest2015$Sex)
#b)
plot(dataSetarrest2015$Sex) #Masculí
#b)
plot(table(dataSetarrest2015$Sex)) #Masculí
#c)
labelsPie <- c("Femení", "Masculí")
pie(table(dataSetarrest2015$Sex), labelsPie, main = "Diagrama Ofenses per sexe")
#d)
plot(table(dataSetarrest2015$Race))
#e)
pie(table(dataSetarrest2015$Race))
#f)
plot(table(dataSetarrest2015$ArrestTime))
plot(edad, sexp, main = "dependencia", xlab = "edad", ylab = "sexe")
View(sexp)
source("G:/DAWBio/M14/UF1/R/Activitat2/Activitat2IsaacGarcia.R", encoding = 'UTF-8')
pelis <- read.csv("InventarioPeliculas.csv", header = TRUE, sep = ";", dec = ".", stringsAsFactors=FALSE, fileEncoding="latin1")
pelisFormato <- pelis[which(pelis$Formato == "DVD"),]
pelisFormato <- df[FALSE,]
pelisFormato = df[FALSE,]
emptypelisFormato = df[FALSE,]
emptypelisFormato = pelis[FALSE,]
pelisFormato = pelis[FALSE,]
shiny::runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp()
pelis <- read.csv("InventarioPeliculas.csv", header = TRUE, sep = ";", dec = ".", stringsAsFactors=FALSE, fileEncoding="latin1")
if(ncol(pelis) < 5 || ncol(pelis) > 9) {
print("Debe haber minimo 5 columnas y máximo 9")
}else{
print("todo ok")
}
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
seleccion <- c("formatoOK", "edicionOK", "yearOK")
selecciondf <- seleccion
View(selecciondf)
seleccion <- c("formatoOK", "edicionOK", "yearOK")
seleccion[1:0]
seleccion[2:0]
seleccion[1:0] #"formatoOK"
seleccion[1:2]
seleccion[2:2]
seleccion[3:3]
seleccion[3:3] #"yearOK"
seleccion <- c("", "edicionOK", "yearOK")
seleccion[1:0] #"formatoOK"
seleccion[2:2] #"edicionOK"
seleccion <- c("", "edicionOK", "yearOK")
seleccion[1:0] #"formatoOK"
seleccion[2:2] #"edicionOK"
seleccion[3:3] #"yearOK"
seleccion <- c("", "edicionOK", "yearOK")
seleccion[1:0] #"formatoOK"
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
seleccion2 <- c("DVD")
seleccion2[2:2]
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario')
runApp('G:/DAWBio/M14/UF2/Shiny/AppDeployTest/testAppDeploy')
pelis <- read.csv("InventarioPeliculas.csv", header = TRUE, sep = ";", dec = ".", stringsAsFactors=FALSE, fileEncoding="latin1")
formatos.df <- as.data.frame(table(pelis$Formato))
colnames(formatos.df) = c("Formato", "Cantidad")
formatos <- formatos.df
View(formatos)
getwd()
setwd("G:/DAWBio/M14/UF2/Shiny/Inventario/Inventario")
pelis <- read.csv("InventarioPeliculas.csv", header = TRUE, sep = ";", dec = ".", stringsAsFactors=FALSE, fileEncoding="latin1")
formatos.df <- as.data.frame(table(pelis$Formato))
colnames(formatos.df) = c("Formato", "Cantidad")
formatos <- formatos.df
View(formatos)
labelsPie(formatos[,c])
labelsPie <- formatos[,c]
labelsPie <- formatos[,c("Formato")]
pelis <- read.csv("InventarioPeliculas.csv", header = TRUE, sep = ";", dec = ".", stringsAsFactors=FALSE, fileEncoding="latin1")
formatos.df <- as.data.frame(table(pelis$Formato))
colnames(formatos.df) = c("Formato", "Cantidad")
formatos <- formatos.df
labelsPie <- formatos[,c("Formato")]
pie(formatos, labelsPie, main = "Diagrama Formatos")
formatos.df <- as.data.frame(table(pelis$Formato))
colnames(formatos.df) = c("Formato", "Cantidad")
formatos <- formatos.df
labelsPie <- formatos[,c("Formato")]
pie(formatos$Cantidad, labelsPie, main = "Diagrama Formatos")
hist(formatos$Formato)
hist(formatos)
hist(formatos$Cantidad)
plot(formatos$Formato, formatos$Cantidad)
library(ggplot2)
data=data.frame(value=rnorm(100))
# basic histogram
p <- ggplot(data, aes(x=value)) +
geom_histogram()
p
data=data.frame(value=formatos)
# basic histogram
p <- ggplot(data, aes(x=value)) +
geom_histogram()
p
data=data.frame(value=formatos)
# basic histogram
p <- ggplot(data, aes(x=formatos$Formato)) +
geom_histogram()
p
library(ggplot2)
# 1: uniform color. Color is for the border, fill is for the inside
ggplot(mtcars, aes(x=as.factor(cyl) )) +
geom_bar(color="blue", fill=rgb(0.1,0.4,0.5,0.7) )
# 2: Using Hue
ggplot(mtcars, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
# 3: Using RColorBrewer
ggplot(mtcars, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none")
# 4: Using greyscale:
ggplot(mtcars, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_grey(start = 0.25, end = 0.75) +
theme(legend.position="none")
# 5: Set manualy
ggplot(mtcars, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_manual(values = c("red", "green", "blue") ) +
theme(legend.position="none")
# 1: uniform color. Color is for the border, fill is for the inside
ggplot(mtcars, aes(x=as.factor(cyl) )) +
geom_bar(color="blue", fill=rgb(0.1,0.4,0.5,0.7) )
# 2: Using Hue
ggplot(mtcars, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
# 3: Using RColorBrewer
ggplot(mtcars, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none")
# 4: Using greyscale:
ggplot(mtcars, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_grey(start = 0.25, end = 0.75) +
theme(legend.position="none")
# 5: Set manualy
ggplot(mtcars, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_manual(values = c("red", "green", "blue") ) +
theme(legend.position="none")
# 3: Using RColorBrewer
ggplot(mtcars, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_brewer(palette = "Set1") +
theme(legend.position="none")
ggplot
# 2: Using Hue
ggplot(mtcars, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
ggplot(formatos, aes(x=formatos$Formato, fill=as.factor(formatos$Cantidad) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
library(ggplot2)
# Create data
data <- data.frame(
name=c("A","B","C","D","E") ,
value=c(3,12,5,18,45)
)
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity")
# Create data
data <- data.frame(
name=colnames(formatos) ,
value=formatos$Cantidad
)
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity")
# Create data
data <- data.frame(
name=colnames(formatos) ,
value=formatos$Cantidad
)
formatosnombres <- colnames(formatos$Formato)
formatosnombres <- colnames(formatos)
formatosnombres <- formatos$Formato
library(ggplot2)
# Create data
data <- data.frame(
name=formatos$Formato ,
value=formatos$Cantidad
)
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity")
ggplot(data, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
ggplot(mtcars, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
ggplot(mtcars, aes(x=as.factor(cyl), fill="formatos" )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
ggplot(mtcars, aes(x=as.factor(cyl), fill="as.factor(cyl)" )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
ggplot(mtcars, aes(x=as.factor(cyl), fill="as.factor(cyl)" )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
ggplot(mtcars, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
library(ggplot2)
# Create data
data <- data.frame(
name=formatos$Formato ,
value=formatos$Cantidad
)
ggplot(data, aes(x=as.factor(formatos$Cantidad), fill=as.factor(formatos$Formato) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
ggplot(data, aes(x=as.factor(formatos$Formato), fill=as.factor(formatos$Cantidad) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
ggplot(data, aes(x=as.factor(formatos$Formato), fill=as.factor(formatos$Cantidad) )) +
geom_bar( ) +
#scale_fill_hue(c = 40) +
theme(legend.position="none")
ggplot(data, aes(x=as.factor(formatos$Formato), fill=as.factor(formatos$Cantidad) )) +
geom_bar( ) +
scale_fill_hue(c = 5) +
theme(legend.position="none")
colnames(pelis)
ggplot(data, aes(x=as.factor(formatos$Formato), fill=as.factor(formatos$Cantidad) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
colnames(pelis)
library(ggplot2)
# Create data
data <- data.frame(
name=formatos$Formato ,
value=formatos$Cantidad
)
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity")
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar() +
scale_fill_hue(c = 40)
ggplot(data, aes(x=as.factor(formatos$Formato), fill=as.factor(formatos$Cantidad) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar()
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity")
ggplot
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar() +
scale_fill_hue(c = nrow(formatos))
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity") +
scale_fill_hue(c = 15)
ggplot(data, aes(x=as.factor(formatos$Formato), fill=as.factor(formatos$Cantidad) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
ggplot(data, aes(x=as.factor(formatos$Formato), fill=as.factor(formatos$Cantidad) )) +
geom_bar( ) +
scale_fill_hue(c = 15) +
theme(legend.position="none")
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar() +
scale_fill_hue(c = 15)+
theme(legend.position="none")
ggplot(data, aes(x=as.factor(formatos$Formato), fill=as.factor(formatos$Cantidad) )) +
geom_bar( ) +
scale_fill_hue(c = 15) +
theme(legend.position="none")
plot(formatos$Formato, formatos$Cantidad)
barplot(formatos$Formato, formatos$Cantidad)
formatoOK <- as.character(formatos[s, "Formato"])
barplot(formatos$Formato, formatos$Cantidad)
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity")
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity", width=0.2)
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity", width=3)
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity", width=1)
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity", width=0.5)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
# 2: Using Hue
ggplot(mtcars, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
library(ggplot2)
pelis <- read.csv("InventarioPeliculas.csv", header = TRUE, sep = ";", dec = ".", stringsAsFactors=FALSE, fileEncoding="latin1")
formatos.df <- as.data.frame(table(pelis$Formato))
colnames(formatos.df) = c("Formato", "Cantidad")
formatos <- formatos.df
labelsPie <- formatos[,c("Formato")]
pie(formatos$Cantidad, labelsPie, main = "Diagrama Formatos")
data=data.frame(value=formatos)
# basic histogram
p <- ggplot(data, aes(x=formatos$Formato)) +
geom_histogram()
p
plot(formatos$Formato, formatos$Cantidad)
formatoOK <- as.character(formatos[s, "Formato"])
pelisFormato <- leerpelis()[which(leerpelis()$Formato == formatoOK), ]
pelis <- pelisFormato
labelsPie <- colnames(pelisFormato)
pie(table(dataSetarrest2015$Sex), labelsPie, main = "Diagrama Ofenses per sexe")
ggplot(formatos, aes(x=formatos$Formato, fill=as.factor(formatos$Cantidad) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
library(ggplot2)
# Create data
data <- data.frame(
name=formatos$Formato ,
value=formatos$Cantidad
)
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity", width=0.5)
ggplot(data, aes(x=as.factor(formatos$Formato), fill=as.factor(formatos$Cantidad) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
library(ggplot2)
# 1: uniform color. Color is for the border, fill is for the inside
ggplot(mtcars, aes(x=as.factor(cyl) )) +
geom_bar(color="blue", fill=rgb(0.1,0.4,0.5,0.7) )
# 2: Using Hue
ggplot(mtcars, aes(x=as.factor(cyl), fill=as.factor(cyl) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
library(ggplot2)
# Create data
data <- data.frame(
name=formatos$Formato ,
value=formatos$Cantidad
)
library(ggplot2)
# Create data
data <- data.frame(
name=formatos$Formato ,
value=formatos$Cantidad
)
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity", width=0.5)
ggplot(data, aes(x=as.factor(formatos$Formato), fill=as.factor(formatos$Cantidad) )) +
geom_bar( ) +
scale_fill_hue(c = 40) +
theme(legend.position="none")
ggplot(data, aes(x=as.factor(formatos$Formato), fill=as.factor(formatos$Cantidad) )) +
geom_bar(stat = "identity") +
scale_fill_hue(c = 40) +
theme(legend.position="none")
ggplot(data, aes(x=as.factor(formatos$Formato), fill=as.factor(formatos$Cantidad) )) +
geom_bar(stat = "identity") +
scale_fill_hue(c = 15) +
theme(legend.position="none")
ggplot(data, aes(x=formato, y=cantidad)) +
geom_bar(stat = "identity") +
scale_fill_hue(c = 15) +
theme(legend.position="none")
# Create data
data <- data.frame(
formato=formatos$Formato ,
cantidad=formatos$Cantidad
)
ggplot(data, aes(x=formato, y=cantidad)) +
geom_bar(stat = "identity") +
scale_fill_hue(c = 15) +
theme(legend.position="none")
ggplot(data, aes(x=formato, y=cantidad, fill = formato)) +
geom_bar(stat = "identity") +
scale_fill_hue(c = 15) +
theme(legend.position="none")
ggplot(data, aes(x=formato, y=cantidad, fill = formato)) +
geom_bar(stat = "identity") +
scale_fill_hue(c = 40) +
theme(legend.position="none")
runApp('G:/DAWBio/M14/UF2/Shiny/Test/TestApp')
runApp()
runApp()
runApp()
runApp()
runApp('G:/DAWBio/M14/UF2/Shiny/career-pathfinder-master')
runApp('G:/DAWBio/M14/UF2/Shiny/career-pathfinder-master')
runApp('G:/DAWBio/M14/UF2/Shiny/career-pathfinder-master')
runApp('G:/DAWBio/M14/UF2/Shiny/intelligentsia-master')
runApp('G:/DAWBio/M14/UF2/Shiny/intelligentsia-master')
runApp()
runApp()
